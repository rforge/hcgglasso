% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fullProcess.R
\name{fullProcess}
\alias{fullProcess}
\title{Full process of MLGL}
\usage{
fullProcess(X, y, control = c("FWER", "FDR"), alpha = 0.05,
  test = partialFtest, hc = NULL, loss = c("ls", "logit"),
  plot = TRUE, fractionSampleMLGL = 1/2, ...)
}
\arguments{
\item{X}{matrix of size n*p}

\item{y}{vector of size n. If loss = "logit", elements of y must be in {-1,1}}

\item{control}{either "FDR" or "FWER"}

\item{alpha}{control elvel for testing procedure}

\item{test}{test used in the testing procedure. Default is partialFtest for loss = "ls" and partialChisqTest for loss = "logit"}

\item{hc}{output of \code{\link{hclust}} function. If not provided, \code{\link{hclust}} is run with ward.D2 method}

\item{loss}{a character string specifying the loss function to use, valid options are: "ls" least squares loss (regression) and "logit" logistic loss (classification)}

\item{plot}{If TRUE plot the number of groups selected before and after the testing procedure}

\item{fractionSampleMLGL}{a real between 0 and 1 : the fraction of individuals to use in the sample for MLGL (see Details).}

\item{...}{Others parameters}
}
\value{
a list containing :
\describe{
  \item{res}{output of \link{MLGL} function}
  \item{lambdaOpt}{lambda values maximizing the number of rejects}
  \item{var}{A vector containing the index of selected variables for \code{lambdaOpt}}
  \item{group}{A vector containing the values index of selected groups for \code{lambdaOpt}}
}
}
\description{
Run hierarchical clustering following by a group-lasso on all the different partition and a hierarchical testing procedure.
}
\details{
Divide the n individuals in two samples. Then the three following steps are done :
1) Hierarchical CLustering of the variables of X based on the first sample of individuals
2) MLGL on the second sample of individuals
3) Hierarchical testing procedure on the first sample of individuals.
}
\examples{
# least quare lsos
set.seed(42)
X <- simuBlockGaussian(50, 12, 5, 0.7)
y <- drop(X[,c(2,7,12)]\%*\%c(2,2,-2) + rnorm(50, 0, 0.5))
res <- fullProcess(X, y)

# Logistic loss
y <- 2*(rowSums(X[,1:4])>0)-1
res <- fullProcess(X, y, loss = "logit", test = partialChisqtest)


}
\seealso{
\link{MLGL}, \link{hierarchicalFDR}, \link{hierarchicalFWER}, \link{selFDR}, \link{selFWER}
}
\author{
Quentin Grimonprez
}
